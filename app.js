const express = require("express");
const path = require("path");
const mysql = require("mysql2");
const bodyParser = require("body-parser");
const { sendTelegramMessage } = require("./public/javascript/telegramNotifier"); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

const db = mysql.createConnection({
    host: process.env.DB_HOST,
    user: process.env.DB_USER,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME
});

db.connect((err) => {
    if (err) {
        console.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL:", err);
    } else {
        console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MySQL!");
    }
});

const app = express();
const PORT = process.env.PORT || 8000;

app.set("view engine", "ejs");
app.set("views", path.join(__dirname, "public/templates"));

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static(path.join(__dirname, "public")));

// üìå –§–æ—Ä–º–∞ "applications"
app.post("/submit-form", (req, res) => {
    const { fullname, phone, type_request } = req.body;

    if (!fullname || !phone || !type_request) {
        return res.status(400).json({ error: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });
    }

    const query = `INSERT INTO applications (fullname, phone, type_request, type_status) VALUES (?, ?, ?, 0)`;

    db.query(query, [fullname, phone, type_request], (err, result) => {
        if (err) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", err);
            return res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
        const message = `üìå *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞*:\nüë§ –ò–º—è : ${fullname}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\nüìå –¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: ${type_request}`;
        sendTelegramMessage(message);

        res.status(200).json({ message: "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!" });
    });
});

// üìå –§–æ—Ä–º–∞ "transportation"
app.post("/button-submit", (req, res) => {
    const { cargoName, cargoWeight, cargoVolume, selectOption, userName, userPhone } = req.body;

    if (!cargoName || !cargoWeight || !cargoVolume || !selectOption || !userName || !userPhone) {
        return res.status(400).json({ error: "–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });
    }

    const query = `INSERT INTO transportation (cargoName, cargoWeight, cargoVolume, selectOption, userName, userPhone) VALUES (?, ?, ?, ?, ?, ?)`;

    db.query(query, [cargoName, cargoWeight, cargoVolume, selectOption, userName, userPhone], (err, result) => {
        if (err) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", err);
            return res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
        }

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
        const message = `üöõ *–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫—É*:\nüì¶ –ì—Ä—É–∑: ${cargoName}\n‚öñ –í–µ—Å: ${cargoWeight} –∫–≥\nüìè –û–±—ä–µ–º: ${cargoVolume} –º¬≥\nüìç –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${selectOption}\nüë§ –ò–º—è: ${userName}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${userPhone}`;
        sendTelegramMessage(message);

        res.status(200).json({ message: "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!" });
    });
});

app.get("/", (req, res) => res.render("home"));
app.get("/viza", (req, res) => res.render("viza"));
app.get("/footer", (req, res) => res.render("footer"));
app.get("/logistics", (req, res) => res.render("logistics"));
app.get("/migration", (req, res) => res.render("migration"));
app.get("/list-business-visa", (req, res) => res.render("list-business-visa"));
app.get("/list-tourist-visa", (req, res) => res.render("list-tourist-visa"));
app.get("/policy", (req, res) => res.render("policy"));

app.use((req, res) => res.status(404).send("404: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"));

app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
